name: Smart Module Publishing

on:
  push:
    branches: [ main ]

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-version.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # 需要至少两个提交来进行比较

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(grep -i "VERSION_NAME" gradle.properties | cut -d'=' -f2 | tr -d ' \t\r\n')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Get previous version
        id: previous-version
        run: |
          git checkout HEAD~1
          PREVIOUS_VERSION=$(grep -i "VERSION_NAME" gradle.properties | cut -d'=' -f2 | tr -d ' \t\r\n')
          echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT

      - name: Check version change
        id: check-version
        run: |
          if [ "${{ steps.current-version.outputs.current_version }}" != "${{ steps.previous-version.outputs.previous_version }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
  publish:
    runs-on: ubuntu-latest
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'true'
    strategy:
      matrix:
        module: ['scale-image-viewer', 'scale-zoomable-view']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Publish ${{ matrix.module }}
        run: ./gradlew :${{ matrix.module }}:publish
        env:
          GITHUB_PACKAGE_USER: ${{ github.actor }}
          GITHUB_PACKAGE_TOKEN: ${{ secrets.TOKEN }}